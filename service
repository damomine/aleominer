#!/usr/bin/env bash
# Start/stop the Damominer.
#
### BEGIN INIT INFO
# Provides:          Damominer
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts the Damominer
# Description:       Damominer is a GPU optimization miner for Aleo.
### END INIT INFO

PATH=/bin:/usr/bin:/sbin:/usr/sbin
NAME=damominer
SCRIPTNAME=/etc/init.d/"$NAME"
DAMOMINER_DIR="${HOME}/.damominer"
DAMOMINER_CONF_FILE="${DAMOMINER_DIR}/damominer.conf"
DAMOMINER_LOG_FILE="${DAMOMINER_DIR}/aleo.log"
DAMOMINER_FILE="${DAMOMINER_DIR}/damominer"
RETVAL=0

Yellow="\033[33m"
Green="\033[32m"
Red="\033[31m"
Blue="\033[36m"
Font="\033[0m"

INFO="[${Green}Info${Font}]"
ERROR="[${Red}Error${Font}]"
TIP="[${Green}Tip${Font}]"

test -x $DAMOMINER_FILE || (echo -e "${Error} Damominer program does not exist!" && exit 0)

check_running() {
	PID=$(ps -ef | grep "damominer" | grep -v "grep" | grep -v "damominer.sh" | grep -v "init.d" | awk '{print $2}')
	if [[ ! -z ${PID} ]]; then
		return 0
	else
		return 1
	fi
}

read_config() {
	if [[ ! -e ${DAMOMINER_CONF_FILE} ]]; then
       echo -e "${Error} Damominer config file does not exist!" && exit 1
    else
        ADDRESS=$(cat ${DAMOMINER_CONF_FILE} | grep "^address=" | awk -F "=" '{print $NF}')
        PROXY=$(cat ${DAMOMINER_CONF_FILE} | grep "^proxy=" | awk -F "=" '{print $NF}')
        WORKER=$(cat ${DAMOMINER_CONF_FILE} | grep "^worker=" | awk -F "=" '{print $NF}')
        GPU=$(cat ${DAMOMINER_CONF_FILE} | grep "^gpu=" | awk -F "=" '{print $NF}')
    fi
}

view_config() {
	read_config
	echo -e "\n ${Red}—————————————— Damominer configuration information ———————————————${Font}
 Aleo address\t: ${Yellow}${ADDRESS}${Font}
 Proxy address\t: ${Yellow}${PROXY}${Font}
 Device name\t: ${Yellow}${WORKER}${Font}
 Running GPUs\t: ${Yellow}${GPU}${Font}"
}

do_start() {
	check_running
	if [[ $? -eq 0 ]]; then
		echo -e "${INFO} Damoiner (PID ${PID}) is running..." && exit 0
	else
		echo -e "${INFO} Damoiner Starting..."
		read_config

		ARGUMENTS="--address ${ADDRESS} --proxy ${PROXY}"

		if [[ ! -z ${WORKER} ]]; then
			ARGUMENTS="${ARGUMENTS} --worker ${WORKER}"
		fi

		if [[ ! -z ${GPU} ]]; then
			IFS=',' GPULIST=($GPU)
			for GPUINDEX in "${GPULIST[@]}"; 
			do
				ARGUMENTS="${ARGUMENTS} --gpu ${GPUINDEX}"
			done
		fi
		echo -e "${DAMOMINER_FILE} ${ARGUMENTS}"
		bash -c "nohup ${DAMOMINER_FILE} ${ARGUMENTS}" >>"${DAMOMINER_LOG_FILE}" 2>&1 &
		sleep 2s
		check_running
		if [[ $? -eq 0 ]]; then
			view_config
			echo -e "${INFO} Damoiner started successfully!"
		else
			echo -e "${Error} Damoiner failed to start!"
		fi
	fi
}

do_stop() {
	check_running
	if [[ $? -eq 0 ]]; then
		kill -9 ${PID}
		RETVAL=$?
		if [[ $RETVAL -eq 0 ]]; then
			echo -e "${INFO} Damoiner stopped successfully!"
		else
			echo -e "${Error} Damoiner stop failed!"
		fi
	else
		echo -e "${INFO} Damoiner is not running!"
		RETVAL=1
	fi
}

do_restart() {
	do_stop
	sleep 2
	do_start
}

do_status() {
	check_running
	if [[ $? -eq 0 ]]; then
		view_config
		echo -e "${INFO} Damoiner (PID $(echo ${PID})) is running..."
	else
		echo -e "${INFO} Damoiner is not running!"
		RETVAL=1
	fi
}

do_log() {
	tail -f ${DAMOMINER_LOG_FILE}
}

case "$1" in
start)
    do_start
    ;;
stop)
    do_stop
    ;;
restart)
    do_restart
    ;;
status)
    do_status
    ;;
log)
	do_log
	;;
*)
    echo "Usage: /etc/init.d/damominer { start | stop | restart | status | log }"
    RETVAL=1
    ;;
esac
exit $RETVAL
